import React, { useState } from 'react';
import Head from 'next/head';
import axios from 'axios';
import { observer } from 'mobx-react-lite';
import Button from '@avtopro/button';
import TextInput from '@avtopro/text-input';
import FileInput, { FileDropZone } from '@avtopro/files-uploader';
import RobotPreloader from '@avtopro/preloader';
import Modal from '@avtopro/modal';
import Layout from '@/components/layout/Layout';
import PhotoModal from '@/components/photo-modal/PhotoModal';
import { useStore } from '../context/mainContext';

const Home = () => {
    const { vinSearch } = useStore();
    const [vin, setVin] = useState('');
    const [loading, setLoading] = useState(false);
    const [openCamera, setOpenCamera] = useState<boolean>(false);

    type CustomFiles = {
        name: string;
        blob: Blob;
    };

    // useEffect(() => {
    //     if (
    //         /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
    //             navigator.userAgent
    //         )
    //     ) {
    //         console.log('Mobile');
    //     } else {
    //         console.log('PC');
    //     }
    // }, []);

    const performOcr = async (_: string, files: CustomFiles[]) => {
        if (files.length != 0) {
            setLoading(true);
            const imageFile = files[0].blob;
            const formData = new FormData();
            formData.append('file', imageFile);

            axios
                .post(
                    'https://service-vin-search-api.azurewebsites.net/api/vin/ocr',
                    formData
                )
                .then((resp) => {
                    const { data } = resp;
                    setVin(data);
                    setLoading(false);
                })
                .catch((error) => {
                    throw new Error(
                        `Failed to perform OCR. Response status: ${error}`
                    );
                });
        } else {
            setVin('');
        }
    };

    const visibleButton = () => {
        const regexp =
            /^[A-HJ-NPR-Za-hj-npr-z\d]{8}[\dX][A-HJ-NPR-Za-hj-npr-z\d]{2}\d{6}$/;
        return regexp.test(vin);
    };

    return (
        <>
            <Head>
                <title>Vin for Win</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Layout>
                <h1 className="g-col-12">Поиск автомобиля по VIN коду</h1>
                <div
                    style={{ textAlign: 'center' }}
                    className="g-col-6 g-start-4"
                >
                    <span>Укажите VIN код автомобиля.</span>
                </div>
                <div
                    className="camera__button g-col-12"
                    onClick={() => setOpenCamera((prev) => !prev)}
                >
                    <p>Сфотографируйте VIN код.</p>
                </div>
                {openCamera ? <PhotoModal /> : <p>cmkcm</p>}
                <div className="g-col-6 g-start-4">
                    <FileInput
                        onChange={performOcr}
                        {...{
                            name: 'logo',
                            accept: {
                                jpg: ['image/jpeg'],
                                png: ['image/png'],
                                gif: ['image/gif'],
                                tiff: ['image/tiff'],
                                pdf: ['application/pdf']
                            },
                            multiple: false
                        }}
                    >
                        {(inputProps: object) => (
                            <FileDropZone
                                title="Загрузите фото VIN кода"
                                {...inputProps}
                            />
                        )}
                    </FileInput>
                </div>
                {/* {loading && (
                    <RobotPreloader title="Подождите, идёт распознавание VIN кода..." />
                )} */}
                <span
                    className="g-col-4 g-start-5"
                    style={{ textAlign: 'center' }}
                >
                    {vinSearch.vin.length >= 17
                        ? 'Проверьте корректность VIN кода:'
                        : 'или'}
                </span>
                <TextInput
                    defaultValue={vinSearch.vin}
                    className="g-col-6 g-start-4"
                    onChange={(e: React.FormEvent<HTMLInputElement>) => {
                        vinSearch.vin = e.currentTarget.value;
                    }}
                    placeholder="Введите VIN код"
                />
                <div
                    className="g-col-4 g-start-5"
                    style={{ minHeight: '20px', textAlign: 'center' }}
                >
                    {vinSearch.vin.length > 17 && (
                        <span
                            style={{
                                color: 'red'
                            }}
                        >
                            Длина VIN кода не должна превышать 17 символов.
                        </span>
                    )}
                </div>
                {visibleButton() ? (
                    <Button
                        className="g-col-2 g-start-6"
                        theme="prime"
                        uppercase
                    >
                        {loading ? (
                            <div
                                style={{
                                    background: '#0000005e',
                                    width: '100%',
                                    height: '600px',
                                    position: 'relative'
                                }}
                            >
                                <RobotPreloader fixed />
                            </div>
                        ) : (
                            'Найти автомобиль'
                        )}
                    </Button>
                ) : (
                    <Button
                        disabled
                        className="g-col-2 g-start-6"
                        theme="prime"
                        uppercase
                    >
                        {loading ? 'Загрузка' : 'Найти автомобиль'}
                    </Button>
                )}
            </Layout>
        </>
    );
};

export default observer(Home);
